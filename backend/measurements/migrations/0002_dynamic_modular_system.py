# Generated by Django 4.2.24 on 2025-09-27 20:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('stations', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('measurements', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SensorTypeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icono para la UI', max_length=50)),
                ('color_code', models.CharField(blank=True, help_text='Color hex para la UI', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoría de Sensor',
                'verbose_name_plural': 'Categorías de Sensores',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ModuleConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre único del módulo', max_length=100, unique=True)),
                ('display_name', models.CharField(help_text='Nombre para mostrar en la interfaz', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción del módulo y su funcionalidad')),
                ('is_enabled', models.BooleanField(default=True, help_text='Si el módulo está habilitado')),
                ('is_visible', models.BooleanField(default=True, help_text='Si el módulo es visible en la interfaz')),
                ('version', models.CharField(default='1.0.0', help_text='Versión del módulo', max_length=20)),
                ('dependencies', models.TextField(default='[]', help_text='Lista JSON de módulos dependientes')),
                ('permissions_required', models.TextField(default='[]', help_text='Lista JSON de permisos requeridos')),
                ('configuration', models.TextField(default='{}', help_text='Configuración JSON específica del módulo')),
                ('order', models.IntegerField(default=0, help_text='Orden de visualización')),
                ('category', models.CharField(blank=True, help_text='Categoría del módulo', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_modules', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_modules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración de Módulo',
                'verbose_name_plural': 'Configuraciones de Módulos',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DynamicSensorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('measurement_unit', models.CharField(max_length=20)),
                ('precision_decimals', models.PositiveSmallIntegerField(default=2)),
                ('min_value', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('validation_rules', models.TextField(blank=True, default='{}', help_text='Reglas de validación personalizadas en formato JSON')),
                ('display_name', models.CharField(blank=True, max_length=100)),
                ('display_format', models.CharField(default='{value} {unit}', help_text='Formato de visualización: {value} {unit}', max_length=50)),
                ('chart_type', models.CharField(choices=[('line', 'Línea'), ('bar', 'Barras'), ('area', 'Área'), ('gauge', 'Medidor')], default='line', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='RF4.3 - Control de visibilidad')),
                ('requires_calibration', models.BooleanField(default=False)),
                ('sampling_frequency', models.PositiveIntegerField(default=60, help_text='Frecuencia de muestreo en segundos')),
                ('default_thresholds', models.TextField(blank=True, default='{}', help_text='Umbrales por defecto: {critical_min, critical_max, warning_min, warning_max}')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='measurements.sensortypecategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tipo de Sensor Dinámico',
                'verbose_name_plural': 'Tipos de Sensores Dinámicos',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ModuleAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_module_accesses', to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='measurements.moduleconfiguration')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Acceso a Módulo',
                'verbose_name_plural': 'Accesos a Módulos',
                'unique_together': {('user', 'module')},
            },
        ),
        migrations.CreateModel(
            name='ExtensibleMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=6, max_digits=15)),
                ('timestamp', models.DateTimeField()),
                ('metadata', models.TextField(blank=True, default='{}', help_text='Metadatos adicionales específicos del sensor')),
                ('quality_flag', models.CharField(choices=[('good', 'Buena'), ('questionable', 'Cuestionable'), ('bad', 'Mala'), ('estimated', 'Estimada')], default='good', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sensor_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='measurements.dynamicsensortype')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.station')),
            ],
            options={
                'verbose_name': 'Medición Extensible',
                'verbose_name_plural': 'Mediciones Extensibles',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['sensor_type', 'station', '-timestamp'], name='measurement_sensor__d7d449_idx'), models.Index(fields=['timestamp', 'quality_flag'], name='measurement_timesta_1187d4_idx')],
            },
        ),
    ]
