version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: rioclaro_production
      POSTGRES_USER: rioclaro_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rioclaro_user -d rioclaro_production"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build:
      context: .
      target: production
    restart: unless-stopped
    depends_on:
      - db
      - redis
    environment:
      DJANGO_ENVIRONMENT: production
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgres://rioclaro_user:${DB_PASSWORD}@db:5432/rioclaro_production
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/1
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis:6379/0
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      DEBUG: "False"
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - app_logs:/app/logs
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build:
      context: .
      target: production
    restart: unless-stopped
    depends_on:
      - db
      - redis
    environment:
      DJANGO_ENVIRONMENT: production
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgres://rioclaro_user:${DB_PASSWORD}@db:5432/rioclaro_production
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/1
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis:6379/0
    volumes:
      - app_logs:/app/logs
    command: celery -A rioclaro_api worker -l info --concurrency=2
    healthcheck:
      test: ["CMD-SHELL", "celery -A rioclaro_api status"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery-beat:
    build:
      context: .
      target: production
    restart: unless-stopped
    depends_on:
      - db
      - redis
    environment:
      DJANGO_ENVIRONMENT: production
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgres://rioclaro_user:${DB_PASSWORD}@db:5432/rioclaro_production
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/1
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis:6379/0
    volumes:
      - app_logs:/app/logs
    command: celery -A rioclaro_api beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_files:/var/www/static
      - media_files:/var/www/media
      - ./docker/ssl:/etc/nginx/ssl
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files:
  app_logs:

networks:
  default:
    driver: bridge